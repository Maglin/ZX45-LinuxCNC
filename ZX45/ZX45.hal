#
# ZX45 Config
#
# Author: Peter MÃ¼ller
# Source: github.com/PeterMue/ZX45-CNC
#

loadrt trivkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt hostmot2
loadrt hm2_pci config=" num_encoders=5 num_pwmgens=0 num_stepgens=5 sserial_port_0=00xxxx" 
setp   hm2_5i25.0.watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.z,pid.s

# --- LOAD Components ---
loadrt abs_s32          names=abs_s32.sxp
loadrt and2             names=and2.motion-enabled_spindle-unlocked,and2.spindle-release_spindle-on,and2.sxp-a-pos,and2.sxp-a-neg,and2.sxp-z-pos,and2.sxp-z-neg,and2.sxp-y-pos,and2.sxp-y-neg,and2.sxp-x-pos,and2.sxp-x-neg
loadrt ilowpass         names=ilowpass.sxp-feed
loadrt limit2           names=limit2.spindle-ramp
loadrt mux2             names=mux2.sxp-x-analog,mux2.sxp-y-analog,mux2.sxp-z-analog,mux2.sxp-a-analog
loadrt near             names=near.spindle-speed_ramped-speed
loadrt not              names=not.spindle-locked,not.spindle-at-ramped-speed
loadrt or2              names=or2.spindle-on_spindle-ramping
loadrt select8          names=select8.sxp-jog-speed,select8.sxp-jog-increment
loadrt scale            names=scale.offset-spinout-zero,scale.sxp-jog-speed
loadrt tristate_float   names=tristate-float.sxp-jog-0,tristate-float.sxp-jog-1,tristate-float.sxp-jog-2,tristate-float.sxp-jog-3,tristate-float.sxp-jog-4,tristate-float.sxp-jog-5,tristate-float.sxp-jog-6,tristate-float.sxp-jog-7,tristate-float.sxp-jog-increment-0,tristate-float.sxp-jog-increment-1,tristate-float.sxp-jog-increment-2,tristate-float.sxp-jog-increment-3
loadrt updown           names=updown.sxp-feed-cycle


#*******************
# Cycle methdos
#*******************
addf hm2_5i25.0.read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf hm2_5i25.0.write         servo-thread


#*******************
#  AXIS X
#*******************

# --- pid setup ---
setp pid.x.Pgain                    [AXIS_0]P
setp pid.x.Igain                    [AXIS_0]I
setp pid.x.Dgain                    [AXIS_0]D
setp pid.x.bias                     [AXIS_0]BIAS
setp pid.x.FF0                      [AXIS_0]FF0
setp pid.x.FF1                      [AXIS_0]FF1
setp pid.x.FF2                      [AXIS_0]FF2
setp pid.x.deadband                 [AXIS_0]DEADBAND
setp pid.x.maxoutput                [AXIS_0]MAX_OUTPUT
setp pid.x.error-previous-target    true
setp pid.x.maxerror                 .0005

# --- stepgen setup ---
setp hm2_5i25.0.stepgen.00.dirsetup         [AXIS_0]DIRSETUP
setp hm2_5i25.0.stepgen.00.dirhold          [AXIS_0]DIRHOLD
setp hm2_5i25.0.stepgen.00.steplen          [AXIS_0]STEPLEN
setp hm2_5i25.0.stepgen.00.stepspace        [AXIS_0]STEPSPACE
setp hm2_5i25.0.stepgen.00.position-scale   [AXIS_0]STEP_SCALE
setp hm2_5i25.0.stepgen.00.step_type        0
setp hm2_5i25.0.stepgen.00.control-type     1
setp hm2_5i25.0.stepgen.00.maxaccel         [AXIS_0]STEPGEN_MAXACCEL
setp hm2_5i25.0.stepgen.00.maxvel           [AXIS_0]STEPGEN_MAXVEL

# --- encoder setup ---
setp hm2_5i25.0.encoder.02.counter-mode      0
setp hm2_5i25.0.encoder.02.filter            1
setp hm2_5i25.0.encoder.02.index-invert      0
setp hm2_5i25.0.encoder.02.index-mask        0
setp hm2_5i25.0.encoder.02.index-mask-invert 0
setp hm2_5i25.0.encoder.02.scale             [AXIS_0]ENCODER_SCALE

# --- connections ---
# axis movement
net x-index-enable  <=> pid.x.index-enable  <=> axis.0.index-enable     <=> hm2_5i25.0.encoder.02.index-enable
net x-enable        =>  pid.x.enable         => axis.0.amp-enable-out    => hm2_5i25.0.stepgen.00.enable
net x-pos-cmd       =>  axis.0.motor-pos-cmd => pid.x.command
net x-pos-fb        =>  hm2_5i25.0.encoder.02.position => pid.x.feedback => axis.0.motor-pos-fb
net x-output        =>  pid.x.output         => hm2_5i25.0.stepgen.00.velocity-cmd
# home & limit
net home-x          =>  axis.0.home-sw-in       <=  hm2_5i25.0.7i76.0.0.input-02-not
net min-x           =>  axis.0.neg-lim-sw-in    <=  hm2_5i25.0.7i76.0.0.input-00-not
net max-x           =>  axis.0.pos-lim-sw-in    <=  hm2_5i25.0.7i76.0.0.input-01-not

#*******************
#  AXIS Y
#*******************

# --- pid setup ---
setp pid.y.Pgain                    [AXIS_1]P
setp pid.y.Igain                    [AXIS_1]I
setp pid.y.Dgain                    [AXIS_1]D
setp pid.y.bias                     [AXIS_1]BIAS
setp pid.y.FF0                      [AXIS_1]FF0
setp pid.y.FF1                      [AXIS_1]FF1
setp pid.y.FF2                      [AXIS_1]FF2
setp pid.y.deadband                 [AXIS_1]DEADBAND
setp pid.y.maxoutput                [AXIS_1]MAX_OUTPUT
setp pid.y.error-previous-target    true
setp pid.y.maxerror                 .0005

# --- stepgen setup ---
setp hm2_5i25.0.stepgen.01.dirsetup         [AXIS_1]DIRSETUP
setp hm2_5i25.0.stepgen.01.dirhold          [AXIS_1]DIRHOLD
setp hm2_5i25.0.stepgen.01.steplen          [AXIS_1]STEPLEN
setp hm2_5i25.0.stepgen.01.stepspace        [AXIS_1]STEPSPACE
setp hm2_5i25.0.stepgen.01.position-scale   [AXIS_1]STEP_SCALE
setp hm2_5i25.0.stepgen.01.step_type        0
setp hm2_5i25.0.stepgen.01.control-type     1
setp hm2_5i25.0.stepgen.01.maxaccel         [AXIS_1]STEPGEN_MAXACCEL
setp hm2_5i25.0.stepgen.01.maxvel           [AXIS_1]STEPGEN_MAXVEL

# --- encoder setup ---
setp hm2_5i25.0.encoder.03.counter-mode      0
setp hm2_5i25.0.encoder.03.filter            1
setp hm2_5i25.0.encoder.03.index-invert      0
setp hm2_5i25.0.encoder.03.index-mask        0
setp hm2_5i25.0.encoder.03.index-mask-invert 0
setp hm2_5i25.0.encoder.03.scale             [AXIS_1]ENCODER_SCALE

# --- connections ---
# axis movement
net y-index-enable  <=> pid.y.index-enable  <=> axis.1.index-enable     <=> hm2_5i25.0.encoder.03.index-enable
net y-enable        =>  pid.y.enable         => axis.1.amp-enable-out    => hm2_5i25.0.stepgen.01.enable
net y-pos-cmd       =>  axis.1.motor-pos-cmd => pid.y.command
net y-pos-fb        =>  hm2_5i25.0.encoder.03.position => pid.y.feedback => axis.1.motor-pos-fb
net y-output        =>  pid.y.output         => hm2_5i25.0.stepgen.01.velocity-cmd
# home & limit
net home-y          =>  axis.1.home-sw-in       <=  hm2_5i25.0.7i76.0.0.input-06-not
net min-y           =>  axis.1.neg-lim-sw-in    <=	hm2_5i25.0.7i76.0.0.input-04-not
net max-y           =>  axis.1.pos-lim-sw-in    <=  hm2_5i25.0.7i76.0.0.input-05-not

#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [AXIS_2]P
setp   pid.z.Igain     [AXIS_2]I
setp   pid.z.Dgain     [AXIS_2]D
setp   pid.z.bias      [AXIS_2]BIAS
setp   pid.z.FF0       [AXIS_2]FF0
setp   pid.z.FF1       [AXIS_2]FF1
setp   pid.z.FF2       [AXIS_2]FF2
setp   pid.z.deadband  [AXIS_2]DEADBAND
setp   pid.z.maxoutput [AXIS_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
setp   pid.z.maxerror .0005

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-vel-cmd       =>  pid.z.command-deriv
net z-pos-fb        =>  pid.z.feedback
net z-output        =>  pid.z.output

# Step Gen signals/setup

setp   hm2_5i25.0.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp   hm2_5i25.0.stepgen.02.dirhold         [AXIS_2]DIRHOLD
setp   hm2_5i25.0.stepgen.02.steplen         [AXIS_2]STEPLEN
setp   hm2_5i25.0.stepgen.02.stepspace       [AXIS_2]STEPSPACE
setp   hm2_5i25.0.stepgen.02.position-scale  [AXIS_2]STEP_SCALE
setp   hm2_5i25.0.stepgen.02.step_type        0
setp   hm2_5i25.0.stepgen.02.control-type     1
setp   hm2_5i25.0.stepgen.02.maxaccel         [AXIS_2]STEPGEN_MAXACCEL
setp   hm2_5i25.0.stepgen.02.maxvel           [AXIS_2]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= axis.2.motor-pos-cmd
net z-vel-cmd    <= axis.2.joint-vel-cmd
net z-output     <= hm2_5i25.0.stepgen.02.velocity-cmd
net z-pos-fb     <= hm2_5i25.0.stepgen.02.position-fb
net z-pos-fb     => axis.2.motor-pos-fb
net z-enable     <= axis.2.amp-enable-out
net z-enable     => hm2_5i25.0.stepgen.02.enable

# home & limit
net home-z  =>  axis.2.home-sw-in       <=  hm2_5i25.0.7i76.0.0.input-10
net min-z   =>  axis.2.neg-lim-sw-in    <=  hm2_5i25.0.7i76.0.0.input-08
net max-z   =>  axis.2.pos-lim-sw-in    <=  hm2_5i25.0.7i76.0.0.input-09

#*******************
#  SPINDLE S
#*******************

#loadrt not      names=not.spindle-locked,not.spindle-at-ramped-speed
#loadrt and2     names=and2.motion-enabled_spindle-unlocked,and2.spindle-release_spindle-on
#loadrt or2      names=or2.spindle-on_spindle-ramping
#loadrt limit2   names=limit2.spindle-ramp
#loadrt scale    names=scale.offset-spinout-zero
#loadrt near     names=near.spindle-speed_ramped-speed

# --- bind cycle functions ---
# addf name                   servo-thread
addf not.spindle-locked                     servo-thread
addf not.spindle-at-ramped-speed            servo-thread
addf and2.motion-enabled_spindle-unlocked   servo-thread
addf and2.spindle-release_spindle-on        servo-thread
addf or2.spindle-on_spindle-ramping         servo-thread
addf limit2.spindle-ramp                    servo-thread
addf scale.offset-spinout-zero              servo-thread
addf near.spindle-speed_ramped-speed        servo-thread

# --- configure components ---
setp limit2.spindle-ramp.maxv                   [SPINDLE_9]RAMP_MAXV
setp scale.offset-spinout-zero.gain             1
setp scale.offset-spinout-zero.offset           [SPINDLE_9]SPINOUT_ZERO_OFFSET
setp hm2_5i25.0.7i76.0.0.spinout-minlim         [SPINDLE_9]SPINOUT_MINLIM
setp hm2_5i25.0.7i76.0.0.spinout-maxlim         [SPINDLE_9]SPINOUT_MAXLIM
setp hm2_5i25.0.7i76.0.0.spinout-scalemax       [SPINDLE_9]SPINOUT_SCALEMAX     
setp near.spindle-speed_ramped-speed.difference 1

# --- wire some meaningful signals ---
net machine-is-enabled      <= motion.motion-enabled
net spindle-on              <= motion.spindle-on
net spindle-locked          <= motion.spindle-locked
net spindle-unlocked        <= not.spindle-locked.out
net spindle-speed-out       <= motion.spindle-speed-out

# --- wire logic ---
net spindle-locked          =>  not.spindle-locked.in

# > ramp spindle speed
net spindle-speed-out       => limit2.spindle-ramp.in
net spindle-speed-ramped    <= limit2.spindle-ramp.out                          => scale.offset-spinout-zero.in
net spindle-speed-spinout   <= scale.offset-spinout-zero.out                    => hm2_5i25.0.7i76.0.0.spinout

# > servo enable switch conditions
net machine-is-enabled      => and2.motion-enabled_spindle-unlocked.in0
net spindle-unlocked        => and2.motion-enabled_spindle-unlocked.in1
net ext-spindle-release     <= and2.motion-enabled_spindle-unlocked.out         => and2.spindle-release_spindle-on.in0
net spindle-on              => or2.spindle-on_spindle-ramping.in0
# > servo enable when ramping (ramp-out)
net spindle-speed-out       => near.spindle-speed_ramped-speed.in1
net spindle-speed-ramped    => near.spindle-speed_ramped-speed.in2
net spindle-at-ramped-speed <= near.spindle-speed_ramped-speed.out              => not.spindle-at-ramped-speed.in
net spindle-speed-ramping   <= not.spindle-at-ramped-speed.out                  => or2.spindle-on_spindle-ramping.in1
# > enable servo
net spindle-on-or-ramping   <= or2.spindle-on_spindle-ramping.out               => and2.spindle-release_spindle-on.in1
net spindle-spinena         <= and2.spindle-release_spindle-on.out              => hm2_5i25.0.7i76.0.0.spinena


# --- pid setup ---
setp   pid.s.Pgain                  [SPINDLE_9]P
setp   pid.s.Igain                  [SPINDLE_9]I
setp   pid.s.Dgain                  [SPINDLE_9]D
setp   pid.s.bias                   [SPINDLE_9]BIAS
setp   pid.s.FF0                    [SPINDLE_9]FF0
setp   pid.s.FF1                    [SPINDLE_9]FF1
setp   pid.s.FF2                    [SPINDLE_9]FF2
setp   pid.s.deadband               [SPINDLE_9]DEADBAND
setp   pid.s.maxoutput              [SPINDLE_9]MAX_OUTPUT
setp   pid.s.error-previous-target  true
setp   pid.s.maxerror               .0005

# --- encoder setup ---
setp hm2_5i25.0.encoder.00.counter-mode      0
setp hm2_5i25.0.encoder.00.filter            1
setp hm2_5i25.0.encoder.00.index-invert      0
setp hm2_5i25.0.encoder.00.index-mask        0
setp hm2_5i25.0.encoder.00.index-mask-invert 0
setp hm2_5i25.0.encoder.00.scale             [SPINDLE_9]ENCODER_SCALE

# ---Setup spindle at speed signals---

net spindle-at-speed    <= motion.spindle-at-speed
sets spindle-at-speed true


#******************************
# connect miscellaneous signals
#******************************

# ---HALUI signals---

net joint-select-a        halui.joint.0.select
net x-is-homed            halui.joint.0.is-homed
#net jog-x-pos             halui.jog.0.plus
#net jog-x-neg             halui.jog.0.minus
net jog-x-analog          halui.jog.0.analog

net joint-select-b        halui.joint.1.select
net y-is-homed            halui.joint.1.is-homed
#net jog-y-pos             halui.jog.1.plus
#net jog-y-neg             halui.jog.1.minus
net jog-y-analog          halui.jog.1.analog

net joint-select-c        halui.joint.2.select
net z-is-homed            halui.joint.2.is-homed
#net jog-z-pos             halui.jog.2.plus
#net jog-z-neg             halui.jog.2.minus
net jog-z-analog          halui.jog.2.analog

net jog-selected-pos      halui.jog.selected.plus
net jog-selected-neg      halui.jog.selected.minus
#net jog-speed             halui.jog-speed 

net spindle-manual-cw     halui.spindle.forward
net spindle-manual-ccw    halui.spindle.reverse
net spindle-manual-stop   halui.spindle.stop

net machine-is-on         halui.machine.is-on
net MDI-mode              halui.mode.is-mdi

# --- coolant ---
net coolant-mist    <=  iocontrol.0.coolant-mist  => hm2_5i25.0.7i76.0.0.output-01    => hm2_5i25.0.7i76.0.0.output-02
net coolant-flood   <=  iocontrol.0.coolant-flood => hm2_5i25.0.7i76.0.0.output-00

# ---probe signal---

net probe-in     =>  motion.probe-input

# ---motion control signals---

net in-position               <=  motion.in-position

# ---digital in / out signals---
# ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-out     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

#*******************
# ShuttleXpress
#*******************
loadusr -W shuttlexpress /dev/hidraw_shuttlexpress
#loadrt abs_s32 names=abs_s32.sxp
#loadrt select8 names=select8.sxp-jog-speed,select8.sxp-jog-increment
#loadrt tristate_float names=tristate-float.sxp-jog-0,tristate-float.sxp-jog-1,tristate-float.sxp-jog-2,tristate-float.sxp-jog-3,tristate-float.sxp-jog-4,tristate-float.sxp-jog-5,tristate-float.sxp-jog-6,tristate-float.sxp-jog-7,tristate-float.sxp-jog-increment-0,tristate-float.sxp-jog-increment-1,tristate-float.sxp-jog-increment-2,tristate-float.sxp-jog-increment-3
#loadrt scale names=scale.sxp-jog-speed
#loadrt and2 names=and2.sxp-a-pos,and2.sxp-a-neg,and2.sxp-z-pos,and2.sxp-z-neg,and2.sxp-y-pos,and2.sxp-y-neg,and2.sxp-x-pos,and2.sxp-x-neg
#loadrt updown names=updown.sxp-feed-cycle
#loadrt ilowpass names=ilowpass.sxp-feed
#loadrt mux2 names=mux2.sxp-x-analog,mux2.sxp-y-analog,mux2.sxp-z-analog,mux2.sxp-a-analog

# --- wire shuttlexpress to meaningful signals ---
net sxp.x-button        <= shuttlexpress.0.button-0
net sxp.y-button        <= shuttlexpress.0.button-1
net sxp.z-button        <= shuttlexpress.0.button-2
net sxp.a-button        <= shuttlexpress.0.button-3
net sxp.step-button     <= shuttlexpress.0.button-4
net sxp.counts          <= shuttlexpress.0.counts
net sxp.spring-wheel    <= shuttlexpress.0.spring-wheel-s32
net sxp.spring-wheel-f  <= shuttlexpress.0.spring-wheel-f

# ---
# --- Spring Wheel Configuration ---
# ---

# bind cycle functions 
addf abs_s32.sxp                servo-thread
addf select8.sxp-jog-speed      servo-thread
addf scale.sxp-jog-speed        servo-thread
addf tristate-float.sxp-jog-0   servo-thread
addf tristate-float.sxp-jog-1   servo-thread
addf tristate-float.sxp-jog-2   servo-thread
addf tristate-float.sxp-jog-3   servo-thread
addf tristate-float.sxp-jog-4   servo-thread
addf tristate-float.sxp-jog-5   servo-thread
addf tristate-float.sxp-jog-6   servo-thread
addf tristate-float.sxp-jog-7   servo-thread
addf and2.sxp-x-pos             servo-thread
addf and2.sxp-x-neg             servo-thread
addf and2.sxp-y-pos             servo-thread
addf and2.sxp-y-neg             servo-thread
addf and2.sxp-z-pos             servo-thread
addf and2.sxp-z-neg             servo-thread
addf and2.sxp-a-pos             servo-thread
addf and2.sxp-a-neg             servo-thread

# abs spring wheel index (ranges from -7 to +7)
net sxp.spring-wheel                => abs_s32.sxp.in
net sxp.spring-wheel-abs            <= abs_s32.sxp.out  => select8.sxp-jog-speed.sel
net sxp.spring-wheel-is-positive    <= abs_s32.sxp.is-positive
net sxp.spring-wheel-is-negative    <= abs_s32.sxp.is-negative

# gain equals the max jog speed in  mm/min
setp scale.sxp-jog-speed.gain 2000
setp scale.sxp-jog-speed.offset 0
# jog speed distribution on the spring wheel (7 steps from zero to max)
setp tristate-float.sxp-jog-0.in 0.000
setp tristate-float.sxp-jog-1.in 0.025
setp tristate-float.sxp-jog-2.in 0.050
setp tristate-float.sxp-jog-3.in 0.100
setp tristate-float.sxp-jog-4.in 0.250
setp tristate-float.sxp-jog-5.in 0.500
setp tristate-float.sxp-jog-6.in 0.750
setp tristate-float.sxp-jog-7.in 1.000

net sxp.select-jog-speed-0      select8.sxp-jog-speed.out0  => tristate-float.sxp-jog-0.enable
net sxp.select-jog-speed-1      select8.sxp-jog-speed.out1  => tristate-float.sxp-jog-1.enable
net sxp.select-jog-speed-2      select8.sxp-jog-speed.out2  => tristate-float.sxp-jog-2.enable
net sxp.select-jog-speed-3      select8.sxp-jog-speed.out3  => tristate-float.sxp-jog-3.enable
net sxp.select-jog-speed-4      select8.sxp-jog-speed.out4  => tristate-float.sxp-jog-4.enable
net sxp.select-jog-speed-5      select8.sxp-jog-speed.out5  => tristate-float.sxp-jog-5.enable
net sxp.select-jog-speed-6      select8.sxp-jog-speed.out6  => tristate-float.sxp-jog-6.enable
net sxp.select-jog-speed-7      select8.sxp-jog-speed.out7  => tristate-float.sxp-jog-7.enable

net sxp.jog-speed-factor           <= tristate-float.sxp-jog-0.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-1.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-2.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-3.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-4.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-5.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-6.out
net sxp.jog-speed-factor           <= tristate-float.sxp-jog-7.out

net sxp.jog-speed-factor           => scale.sxp-jog-speed.in
net jog-speed                      <= scale.sxp-jog-speed.out  => halui.jog-speed

# --- jog x-button activation ---
# pos
net sxp.x-button                    => and2.sxp-x-pos.in0
net sxp.spring-wheel-is-positive    => and2.sxp-x-pos.in1
net sxp.jog-x-pos                   <= and2.sxp-x-pos.out   => halui.jog.0.plus
# neg
net sxp.x-button                    => and2.sxp-x-neg.in0
net sxp.spring-wheel-is-negative    => and2.sxp-x-neg.in1
net sxp.jog-x-neg                   <= and2.sxp-x-neg.out   => halui.jog.0.minus

# --- jog y-button activation ---
# pos
net sxp.y-button                    => and2.sxp-y-pos.in0
net sxp.spring-wheel-is-positive    => and2.sxp-y-pos.in1
net sxp.jog-y-pos                   <= and2.sxp-y-pos.out   => halui.jog.1.plus
# neg
net sxp.y-button                    => and2.sxp-y-neg.in0
net sxp.spring-wheel-is-negative    => and2.sxp-y-neg.in1
net sxp.jog-y-neg                   <= and2.sxp-y-neg.out   => halui.jog.1.minus

# --- jog z-button activation ---
# pos
net sxp.z-button                    => and2.sxp-z-pos.in0
net sxp.spring-wheel-is-positive    => and2.sxp-z-pos.in1
net sxp.jog-z-pos                   <= and2.sxp-z-pos.out   => halui.jog.2.plus
# neg
net sxp.z-button                    => and2.sxp-z-neg.in0
net sxp.spring-wheel-is-negative    => and2.sxp-z-neg.in1
net sxp.jog-z-neg                   <= and2.sxp-z-neg.out   => halui.jog.2.minus

# --- jog a-button activation ---
# pos
net sxp.a-button                    => and2.sxp-a-pos.in0
net sxp.spring-wheel-is-positive    => and2.sxp-a-pos.in1
#net sxp.jog-a-pos                   <= and2.sxp-a-pos.out   => halui.jog.3.plus
# neg
net sxp.a-button                    => and2.sxp-a-neg.in0
net sxp.spring-wheel-is-negative    => and2.sxp-a-neg.in1
#net sxp.jog-a-neg                   <= and2.sxp-a-neg.out   => halui.jog.3.minus


# ---
# --- Tick Wheel Configuration
# --- 

# bind cycle functions
addf updown.sxp-feed-cycle                  servo-thread
addf select8.sxp-jog-increment              servo-thread
addf tristate-float.sxp-jog-increment-0     servo-thread
addf tristate-float.sxp-jog-increment-1     servo-thread
addf tristate-float.sxp-jog-increment-2     servo-thread
addf tristate-float.sxp-jog-increment-3     servo-thread
addf ilowpass.sxp-feed                      servo-thread

# step increments 
setp tristate-float.sxp-jog-increment-0.in  0.000005
setp tristate-float.sxp-jog-increment-1.in  0.00001
setp tristate-float.sxp-jog-increment-2.in  0.0001
setp tristate-float.sxp-jog-increment-3.in  0.001

# step increment cycle (0..3)
setp updown.sxp-feed-cycle.wrap     1
setp updown.sxp-feed-cycle.min      0
setp updown.sxp-feed-cycle.max      3

net sxp.step-button             => updown.sxp-feed-cycle.countup
net sxp.jog-increment-selected  <= updown.sxp-feed-cycle.count


# select increment value, tristate to "switch" float values
net sxp.jog-increment-selected  => select8.sxp-jog-increment.sel

net sxp.select.jog-increment-0  <= select8.sxp-jog-increment.out0   => tristate-float.sxp-jog-increment-0.enable
net sxp.select.jog-increment-1  <= select8.sxp-jog-increment.out1   => tristate-float.sxp-jog-increment-1.enable
net sxp.select.jog-increment-2  <= select8.sxp-jog-increment.out2   => tristate-float.sxp-jog-increment-2.enable
net sxp.select.jog-increment-3  <= select8.sxp-jog-increment.out3   => tristate-float.sxp-jog-increment-3.enable

net sxp.jog-increment   <= tristate-float.sxp-jog-increment-0.out
net sxp.jog-increment   <= tristate-float.sxp-jog-increment-1.out
net sxp.jog-increment   <= tristate-float.sxp-jog-increment-2.out
net sxp.jog-increment   <= tristate-float.sxp-jog-increment-3.out

# set jog scale
net sxp.jog-increment => axis.0.jog-scale
net sxp.jog-increment => axis.1.jog-scale
net sxp.jog-increment => axis.2.jog-scale
#net sxp.jog-increment => axis.3.jog-scale

# jog enable on button click
net sxp.x-button    axis.0.jog-enable
net sxp.y-button    axis.1.jog-enable
net sxp.z-button    axis.2.jog-enable
#net sxp.a-button    axis.3.jog-enable

# smooth using lowpass filter
setp ilowpass.sxp-feed.gain     0.02
setp ilowpass.sxp-feed.scale    1000

net sxp.counts          => ilowpass.sxp-feed.in
net sxp.counts-smooth   <= ilowpass.sxp-feed.out

net sxp.counts-smooth   => axis.0.jog-counts
net sxp.counts-smooth   => axis.1.jog-counts
net sxp.counts-smooth   => axis.2.jog-counts
#net sxp.counts-smooth   => axis.0.jog-counts

